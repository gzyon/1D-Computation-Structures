/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module beta_4 (
    input left_button,
    input right_button,
    input reset,
    input start,
    input clk,
    input rst,
    output reg [7:0] score,
    output reg [15:0] map0_led,
    output reg [15:0] map1_led,
    output reg [15:0] map2_led,
    output reg [15:0] map3_led,
    output reg [15:0] map4_led,
    output reg [15:0] map5_led,
    output reg [15:0] player_led
  );
  
  
  
  reg [15:0] inputA;
  
  reg [15:0] inputB;
  
  wire [16-1:0] M_game_alu_out;
  wire [3-1:0] M_game_alu_zvn;
  reg [16-1:0] M_game_alu_a;
  reg [16-1:0] M_game_alu_b;
  reg [6-1:0] M_game_alu_alufn;
  alu_10 game_alu (
    .a(M_game_alu_a),
    .b(M_game_alu_b),
    .alufn(M_game_alu_alufn),
    .out(M_game_alu_out),
    .zvn(M_game_alu_zvn)
  );
  
  wire [1-1:0] M_game_timer_detector_out;
  reg [1-1:0] M_game_timer_detector_in;
  edge_detector_2 game_timer_detector (
    .clk(clk),
    .in(M_game_timer_detector_in),
    .out(M_game_timer_detector_out)
  );
  wire [1-1:0] M_game_controlunit_we;
  wire [1-1:0] M_game_controlunit_wdsel;
  wire [4-1:0] M_game_controlunit_asel;
  wire [4-1:0] M_game_controlunit_bsel;
  wire [6-1:0] M_game_controlunit_alufn;
  wire [4-1:0] M_game_controlunit_ra;
  wire [4-1:0] M_game_controlunit_rb;
  wire [4-1:0] M_game_controlunit_rc;
  wire [16-1:0] M_game_controlunit_lane1;
  wire [16-1:0] M_game_controlunit_lane2;
  wire [16-1:0] M_game_controlunit_lane3;
  wire [16-1:0] M_game_controlunit_lane4;
  wire [16-1:0] M_game_controlunit_lane5;
  wire [16-1:0] M_game_controlunit_lane6;
  wire [16-1:0] M_game_controlunit_player_position;
  wire [16-1:0] M_game_controlunit_score;
  wire [16-1:0] M_game_controlunit_alu_a;
  reg [1-1:0] M_game_controlunit_decrease_timer;
  reg [1-1:0] M_game_controlunit_left_button;
  reg [1-1:0] M_game_controlunit_right_button;
  reg [1-1:0] M_game_controlunit_rst_button;
  reg [1-1:0] M_game_controlunit_start_button;
  reg [16-1:0] M_game_controlunit_alufn_out;
  game_CU_11 game_controlunit (
    .clk(clk),
    .decrease_timer(M_game_controlunit_decrease_timer),
    .left_button(M_game_controlunit_left_button),
    .right_button(M_game_controlunit_right_button),
    .rst_button(M_game_controlunit_rst_button),
    .start_button(M_game_controlunit_start_button),
    .alufn_out(M_game_controlunit_alufn_out),
    .we(M_game_controlunit_we),
    .wdsel(M_game_controlunit_wdsel),
    .asel(M_game_controlunit_asel),
    .bsel(M_game_controlunit_bsel),
    .alufn(M_game_controlunit_alufn),
    .ra(M_game_controlunit_ra),
    .rb(M_game_controlunit_rb),
    .rc(M_game_controlunit_rc),
    .lane1(M_game_controlunit_lane1),
    .lane2(M_game_controlunit_lane2),
    .lane3(M_game_controlunit_lane3),
    .lane4(M_game_controlunit_lane4),
    .lane5(M_game_controlunit_lane5),
    .lane6(M_game_controlunit_lane6),
    .player_position(M_game_controlunit_player_position),
    .score(M_game_controlunit_score),
    .alu_a(M_game_controlunit_alu_a)
  );
  wire [1-1:0] M_slow_timer_value;
  counter_12 slow_timer (
    .clk(clk),
    .rst(rst),
    .value(M_slow_timer_value)
  );
  
  always @* begin
    M_game_timer_detector_in = M_slow_timer_value;
    M_game_controlunit_decrease_timer = M_game_timer_detector_out;
    M_game_controlunit_rst_button = reset;
    M_game_controlunit_start_button = start;
    M_game_controlunit_right_button = right_button;
    M_game_controlunit_left_button = left_button;
    map0_led = M_game_controlunit_lane1;
    map1_led = M_game_controlunit_lane2;
    map2_led = M_game_controlunit_lane3;
    map3_led = M_game_controlunit_lane4;
    map4_led = M_game_controlunit_lane5;
    map5_led = M_game_controlunit_lane6;
    player_led = M_game_controlunit_player_position;
    score = {4'h0, M_game_controlunit_score[0+3-:4]};
    
    case (M_game_controlunit_bsel)
      4'h1: begin
        inputB = 16'h0001;
      end
      4'h2: begin
        inputB = 16'h0000;
      end
      4'h3: begin
        inputB = 16'h0005;
      end
      4'h4: begin
        inputB = 16'h0020;
      end
      4'h5: begin
        inputB = 16'h0010;
      end
      4'h6: begin
        inputB = 16'h0008;
      end
      4'h7: begin
        inputB = 16'h0040;
      end
      4'h8: begin
        inputB = 16'h0020;
      end
      4'h9: begin
        inputB = 16'h0001;
      end
      default: begin
        inputB = 1'h0;
      end
    endcase
    M_game_alu_a = M_game_controlunit_alu_a;
    M_game_alu_b = inputB;
    M_game_alu_alufn = M_game_controlunit_alufn;
    M_game_controlunit_alufn_out = M_game_alu_out;
  end
endmodule
