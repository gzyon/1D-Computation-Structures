/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module game_CU_14 (
    input clk,
    input rst,
    input decrease_timer,
    input [15:0] regfile_b,
    input left_button,
    input right_button,
    input rst_button,
    input start_button,
    output reg [0:0] we,
    output reg [0:0] wdsel,
    output reg [3:0] asel,
    output reg [3:0] bsel,
    output reg [5:0] alufn,
    output reg [3:0] ra,
    output reg [3:0] rb,
    output reg [3:0] rc
  );
  
  
  
  localparam START_game_fsm = 5'd0;
  localparam SET_SCORE_game_fsm = 5'd1;
  localparam INITIALISE_PLAYER_POSITION_game_fsm = 5'd2;
  localparam INITIALISE_MAP_COL_0_game_fsm = 5'd3;
  localparam INITIALISE_MAP_COL_1_game_fsm = 5'd4;
  localparam INITIALISE_MAP_COL_2_game_fsm = 5'd5;
  localparam INITIALISE_MAP_COL_3_game_fsm = 5'd6;
  localparam INITIALISE_MAP_COL_4_game_fsm = 5'd7;
  localparam INITIALISE_MAP_COL_5_game_fsm = 5'd8;
  localparam IDLE_game_fsm = 5'd9;
  localparam CHECK_LEFT_BOUNDARY_game_fsm = 5'd10;
  localparam BRANCH_LEFT_game_fsm = 5'd11;
  localparam SHIFT_PLAYER_LEFT_game_fsm = 5'd12;
  localparam CHECK_RIGHT_BOUNDARY_game_fsm = 5'd13;
  localparam BRANCH_RIGHT_game_fsm = 5'd14;
  localparam SHIFT_PLAYER_RIGHT_game_fsm = 5'd15;
  localparam SHIFT_COL_0_game_fsm = 5'd16;
  localparam SHIFT_COL_1_game_fsm = 5'd17;
  localparam SHIFT_COL_2_game_fsm = 5'd18;
  localparam SHIFT_COL_3_game_fsm = 5'd19;
  localparam SHIFT_COL_4_game_fsm = 5'd20;
  localparam SHIFT_COL_5_game_fsm = 5'd21;
  localparam SHIFT_COLS_game_fsm = 5'd22;
  localparam GET_PLAYER_POS_game_fsm = 5'd23;
  localparam CHECK_PLAYER_POS_game_fsm = 5'd24;
  localparam CHECK_REMAINING_MAP_LENGTH_game_fsm = 5'd25;
  localparam BRANCH_MAPLENGTH_game_fsm = 5'd26;
  localparam INCREASE_SCORE_game_fsm = 5'd27;
  localparam CHECK_SCORE_game_fsm = 5'd28;
  localparam BRANCH_SCORE_game_fsm = 5'd29;
  localparam GAME_OVER_game_fsm = 5'd30;
  
  reg [4:0] M_game_fsm_d, M_game_fsm_q = START_game_fsm;
  
  always @* begin
    M_game_fsm_d = M_game_fsm_q;
    
    we = 1'h0;
    wdsel = 1'h0;
    asel = 1'h0;
    bsel = 1'h0;
    alufn = 1'h0;
    ra = 1'h0;
    rb = 1'h0;
    rc = 11'h457;
    
    case (M_game_fsm_q)
      START_game_fsm: begin
        if (start_button) begin
          M_game_fsm_d = SET_SCORE_game_fsm;
        end
      end
      SET_SCORE_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h1;
        asel = 4'ha;
        alufn = 14'h2b02;
        rc = 7'h6f;
        M_game_fsm_d = INITIALISE_PLAYER_POSITION_game_fsm;
      end
      INITIALISE_PLAYER_POSITION_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 4'ha;
        bsel = 7'h64;
        alufn = 1'h0;
        rc = 10'h3e8;
        M_game_fsm_d = INITIALISE_MAP_COL_0_game_fsm;
      end
      INITIALISE_MAP_COL_0_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 7'h64;
        alufn = 14'h2b02;
        rc = 1'h0;
        M_game_fsm_d = INITIALISE_MAP_COL_1_game_fsm;
      end
      INITIALISE_MAP_COL_1_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 7'h65;
        alufn = 14'h2b02;
        rc = 1'h1;
        M_game_fsm_d = INITIALISE_MAP_COL_2_game_fsm;
      end
      INITIALISE_MAP_COL_2_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 7'h6e;
        alufn = 14'h2b02;
        rc = 4'ha;
        M_game_fsm_d = INITIALISE_MAP_COL_3_game_fsm;
      end
      INITIALISE_MAP_COL_3_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 7'h6f;
        alufn = 14'h2b02;
        rc = 4'hb;
        M_game_fsm_d = INITIALISE_MAP_COL_4_game_fsm;
      end
      INITIALISE_MAP_COL_4_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 10'h3e8;
        alufn = 14'h2b02;
        rc = 7'h64;
        M_game_fsm_d = INITIALISE_MAP_COL_5_game_fsm;
      end
      INITIALISE_MAP_COL_5_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 10'h3e9;
        alufn = 14'h2b02;
        rc = 7'h65;
        M_game_fsm_d = IDLE_game_fsm;
      end
      IDLE_game_fsm: begin
        we = 1'h0;
        wdsel = 1'h0;
        if (decrease_timer) begin
          M_game_fsm_d = SHIFT_COL_0_game_fsm;
        end else begin
          if (left_button && ~right_button) begin
            M_game_fsm_d = CHECK_LEFT_BOUNDARY_game_fsm;
          end else begin
            if (right_button && ~left_button) begin
              M_game_fsm_d = CHECK_RIGHT_BOUNDARY_game_fsm;
            end
          end
        end
      end
      CHECK_LEFT_BOUNDARY_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 1'h0;
        bsel = 7'h64;
        alufn = 17'h1adbb;
        ra = 10'h3e8;
        rc = 10'h3f2;
        M_game_fsm_d = BRANCH_LEFT_game_fsm;
      end
      BRANCH_LEFT_game_fsm: begin
        rb = 10'h3f2;
        if (regfile_b[0+0-:1] == 1'h0) begin
          M_game_fsm_d = SHIFT_PLAYER_LEFT_game_fsm;
        end else begin
          if (regfile_b[0+0-:1] == 1'h1) begin
            M_game_fsm_d = IDLE_game_fsm;
          end
        end
      end
      SHIFT_PLAYER_LEFT_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 1'h0;
        bsel = 1'h1;
        alufn = 17'h186a0;
        ra = 10'h3e8;
        rc = 10'h3e8;
        M_game_fsm_d = IDLE_game_fsm;
      end
      CHECK_RIGHT_BOUNDARY_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 1'h0;
        bsel = 10'h3e9;
        alufn = 17'h1adbb;
        ra = 10'h3e8;
        rc = 10'h3f2;
        M_game_fsm_d = BRANCH_RIGHT_game_fsm;
      end
      BRANCH_RIGHT_game_fsm: begin
        rb = 10'h3f2;
        if (regfile_b[0+0-:1] == 1'h0) begin
          M_game_fsm_d = SHIFT_PLAYER_RIGHT_game_fsm;
        end else begin
          if (regfile_b[0+0-:1] == 1'h1) begin
            M_game_fsm_d = IDLE_game_fsm;
          end
        end
      end
      SHIFT_PLAYER_RIGHT_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 1'h0;
        bsel = 1'h1;
        alufn = 17'h186a1;
        ra = 10'h3e8;
        rc = 10'h3e8;
        M_game_fsm_d = IDLE_game_fsm;
      end
      SHIFT_COL_0_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 1'h0;
        bsel = 1'h1;
        alufn = 17'h186a1;
        ra = 1'h0;
        rc = 1'h0;
        M_game_fsm_d = SHIFT_COL_1_game_fsm;
      end
      SHIFT_COL_1_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 1'h0;
        bsel = 1'h1;
        alufn = 17'h186a1;
        ra = 1'h1;
        rc = 1'h1;
        M_game_fsm_d = SHIFT_COL_2_game_fsm;
      end
      SHIFT_COL_2_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 1'h0;
        bsel = 1'h1;
        alufn = 17'h186a1;
        ra = 4'ha;
        rc = 4'ha;
        M_game_fsm_d = SHIFT_COL_3_game_fsm;
      end
      SHIFT_COL_3_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 1'h0;
        bsel = 1'h1;
        alufn = 17'h186a1;
        ra = 4'hb;
        rc = 4'hb;
        M_game_fsm_d = SHIFT_COL_4_game_fsm;
      end
      SHIFT_COL_4_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 1'h0;
        bsel = 1'h1;
        alufn = 17'h186a1;
        ra = 7'h64;
        rc = 7'h64;
        M_game_fsm_d = SHIFT_COL_5_game_fsm;
      end
      SHIFT_COL_5_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 1'h0;
        bsel = 1'h1;
        alufn = 17'h186a1;
        ra = 7'h65;
        rc = 7'h65;
        M_game_fsm_d = SHIFT_COLS_game_fsm;
      end
      SHIFT_COLS_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 1'h0;
        bsel = 10'h3f2;
        alufn = 14'h2b66;
        ra = 10'h3e8;
        rc = 10'h3f3;
        M_game_fsm_d = GET_PLAYER_POS_game_fsm;
      end
      GET_PLAYER_POS_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 1'h0;
        bsel = 1'h0;
        alufn = 17'h1adbb;
        ra = 10'h3e8;
        rb = 10'h3f3;
        rc = 11'h44c;
        M_game_fsm_d = CHECK_PLAYER_POS_game_fsm;
      end
      CHECK_PLAYER_POS_game_fsm: begin
        rb = 11'h44c;
        if (regfile_b[0+0-:1] == 1'h1 || regfile_b[1+0-:1] == 1'h1 || regfile_b[2+0-:1] == 1'h1 || regfile_b[3+0-:1] == 1'h1 || regfile_b[4+0-:1] == 1'h1 || regfile_b[5+0-:1] == 1'h1) begin
          M_game_fsm_d = GAME_OVER_game_fsm;
        end else begin
          M_game_fsm_d = CHECK_REMAINING_MAP_LENGTH_game_fsm;
        end
      end
      CHECK_REMAINING_MAP_LENGTH_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 1'h0;
        bsel = 4'ha;
        alufn = 17'h1adbb;
        ra = 7'h65;
        rc = 11'h44d;
        M_game_fsm_d = BRANCH_MAPLENGTH_game_fsm;
      end
      BRANCH_MAPLENGTH_game_fsm: begin
        rb = 11'h44d;
        if (~regfile_b[0+0-:1]) begin
          M_game_fsm_d = IDLE_game_fsm;
        end else begin
          M_game_fsm_d = INCREASE_SCORE_game_fsm;
        end
      end
      INCREASE_SCORE_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 1'h0;
        bsel = 1'h1;
        alufn = 1'h0;
        ra = 7'h6f;
        rc = 7'h6f;
        M_game_fsm_d = CHECK_SCORE_game_fsm;
      end
      CHECK_SCORE_game_fsm: begin
        we = 1'h1;
        wdsel = 1'h0;
        asel = 1'h0;
        bsel = 4'hb;
        alufn = 17'h1adbb;
        ra = 7'h6f;
        rc = 11'h456;
        M_game_fsm_d = BRANCH_SCORE_game_fsm;
      end
      BRANCH_SCORE_game_fsm: begin
        rb = 11'h456;
        if (~regfile_b[0+0-:1]) begin
          M_game_fsm_d = INITIALISE_PLAYER_POSITION_game_fsm;
        end else begin
          M_game_fsm_d = GAME_OVER_game_fsm;
        end
      end
      GAME_OVER_game_fsm: begin
        we = 1'h0;
        wdsel = 1'h0;
        if (rst_button) begin
          M_game_fsm_d = SET_SCORE_game_fsm;
        end else begin
          M_game_fsm_d = GAME_OVER_game_fsm;
        end
      end
    endcase
  end
  
  always @(posedge clk) begin
    M_game_fsm_q <= M_game_fsm_d;
  end
  
endmodule
